var AMK2 = {
  config : {
    verbose: true,
    projectId: "", // Google Assistant ProjectId (Required only when you use gAction.)
    useGactionCLI: false,
    startChime: "connection.mp3",
    noChimeOnSay: false,
    deviceModelId: "", // It should be described in your config.json
    deviceInstanceId: "", // It should be described in your config.json
    deviceLocation: { // (optional)
      coordinates: { // set the latitude and longitude of the device (rf. mygeoposition.com)
        latitude: 51.5033640, // -90.0 - +90.0
        longitude: -0.1276250, // -180.0 - +180.0
      },
    },
    auth: {
      keyFilePath: "./credentials.json"
    },
    defaultProfile: "default",
    profiles: {
      "default" : {
        profileFile: "default.json",
        lang: "en-US"
        //currently available (estimation, not all tested):
        //  de-DE, en-AU, en-CA, en-GB, en-US, en-IN
        // fr-CA, fr-FR, it-IT, ja-JP, es-ES, es-MX, ko-KR, pt-BR
        // https://developers.google.com/assistant/sdk/reference/rpc/languages
      },
    },
    recipes:["hide_and_show_all_modules.js", "reboot.js", "screen_onoff.js", "shutdown.js"],
    transcriptionHook: {},
    action: {},
    command: {},
    responseVoice: true, // If available, Assistant will response with her voice.
    responseScreen: true, // If available, Assistant will response with some rendered HTML
    responseAlert: true, // If available, Assistant will response with Alert module of MM
    // Sometimes, any response could not be returned.
    ignoreNoVoiceError: true, //To avoid some annoying youtube stop bug.



    screenZoom: "80%",
    screenDuration: 0, //If you set 0, Screen Output will be closed after Response speech finishes.

    youtubeAutoplay: true,
    spotifyAutoplay: true,
    pauseOnYoutube:true,
    youtubePlayerVars: { // You can set youtube playerVars for your purpose, but should be careful.
      "controls": 0,
      "loop": 1,
      "rel": 0,
    },
    youtubePlayQuality: "default", //small, medium, large, hd720, hd1080, highres or default


    alertError: true,

    useWelcomeMessage: "",

    record: {
      sampleRate    : 16000,      // audio sample rate
      threshold     : 0.5,        // silence threshold (rec only)
      thresholdStart: null,       // silence threshold to start recording, overrides threshold (rec only)
      thresholdEnd  : null,       // silence threshold to end recording, overrides threshold (rec only)
      silence       : 1.0,        // seconds of silence before ending
      verbose       : false,      // log info to the console
      recordProgram : "arecord",  // Defaults to "arecord" - also supports "rec" and "sox"
      device        : null        // recording device (e.g.: "plughw:1")
    },

    play: {
      encodingOut: "MP3", //'MP3' or 'WAV' is available, but you might not need to modify this.
      sampleRateOut: 24000,
      playProgram: "mpg321", //Your prefer sound play program. By example, if you are running this on OSX, `afplay` could be available.
      playOption: [], // If you need additional options to use playProgram, describe here. (except filename)
      // e.g: ["-d", "", "-t", "100"]
    },

    onIdle: {
      //timer: 1000*60*30, // if you don't want to use this feature, just set timer as `0` or command as ""
      //command: "HIDEMODULES",
      timer: 0,
      command: null,
    },

    onActivate: {
      timer: 0,
      //command: "SHOWMODULES"
      command: null,
    },

    notifications: {
      ASSISTANT_ACTIVATE: "ASSISTANT_ACTIVATE",
      ASSISTANT_DEACTIVATE: "ASSISTANT_CLEAR",
      ASSISTANT_ACTIVATED: "ASSISTANT_ACTIVATED",
      ASSISTANT_DEACTIVATED: "ASSISTANT_DEACTIVATED",
      ASSISTANT_ACTION: "ASSISTANT_ACTION",
      ASSISTANT_UNDERSTOOD: "ASSISTANT_UNDERSTOOD",
      ASSISTANT_RESPONSE_END: "ASSISTANT_RESPONSE_END",
      DEFAULT_HOOK_NOTIFICATION: "ASSISTANT_HOOK",
      TEXT_QUERY: "ASSISTANT_QUERY",
      SAY_TEXT: "ASSISTANT_SAY"
    },

    //magicQueryToSay: "", // set as your language e.g) "Repeat as me : '%TEXT%'",
  },
}
